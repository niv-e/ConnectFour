// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace BusinessLogic.Migrations
{
    [DbContext(typeof(ConnectFourDbContext))]
    partial class ConnectFourDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.Entities.GameSession", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("GameDuration")
                        .HasColumnType("time");

                    b.Property<Guid?>("GameStateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StaringTime")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionId");

                    b.HasIndex("GameStateId");

                    b.HasIndex("PlayerId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("Model.Entities.GameState", b =>
                {
                    b.Property<Guid>("GameStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GameBoard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPlayersTurn")
                        .HasColumnType("bit");

                    b.HasKey("GameStateId");

                    b.ToTable("GameStates");
                });

            modelBuilder.Entity("Model.Entities.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 0,
                            Country = "Israel",
                            FirstName = "Niv",
                            PhoneNumber = "1234567890"
                        });
                });

            modelBuilder.Entity("Model.Entities.GameSession", b =>
                {
                    b.HasOne("Model.Entities.GameState", "GameState")
                        .WithMany()
                        .HasForeignKey("GameStateId");

                    b.HasOne("Model.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");

                    b.Navigation("GameState");

                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
